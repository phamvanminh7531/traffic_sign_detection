# -*- coding: utf-8 -*-
import json
import os
from pathlib import Path

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sys
from PyQt5.QtCore import *
from PyQt5.QtGui import *
from PyQt5.QtWidgets import *
from ultralytics import YOLO
import cv2
from ultralytics.utils.plotting import Annotator  # ultralytics.yolo.utils.plotting is deprecated
from cap_from_youtube import cap_from_youtube
import datetime
from playsound import playsound
import pathlib

class Ui_Dialog(QWidget):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(496, 484)
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(Dialog)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.tabWidget = QtWidgets.QTabWidget(Dialog)
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.tab)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label_6 = QtWidgets.QLabel(self.tab)
        self.label_6.setAlignment(QtCore.Qt.AlignCenter)
        self.label_6.setObjectName("label_6")
        self.verticalLayout.addWidget(self.label_6)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.label_7 = QtWidgets.QLabel(self.tab)
        self.label_7.setObjectName("label_7")
        self.horizontalLayout_4.addWidget(self.label_7)
        self.url = QtWidgets.QLineEdit(self.tab)
        self.url.setObjectName("url")
        self.horizontalLayout_4.addWidget(self.url)
        self.verticalLayout.addLayout(self.horizontalLayout_4)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.sta = QtWidgets.QPushButton(self.tab)
        self.sta.setObjectName("sta")
        self.sta.clicked.connect(self.detect)
        self.horizontalLayout.addWidget(self.sta)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem1)
        self.verticalLayout.addLayout(self.horizontalLayout)
        spacerItem2 = QtWidgets.QSpacerItem(20, 341, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout.addItem(spacerItem2)
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.tab_2)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label = QtWidgets.QLabel(self.tab_2)
        self.label.setMinimumSize(QtCore.QSize(0, 25))
        self.label.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft)
        self.label.setObjectName("label")
        self.verticalLayout_2.addWidget(self.label)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.model = QtWidgets.QLineEdit(self.tab_2)
        self.model.setObjectName("model")
        self.horizontalLayout_3.addWidget(self.model)
        self.open = QtWidgets.QPushButton(self.tab_2)
        self.open.setObjectName("open")
        self.open.clicked.connect(self.getfile)
        self.horizontalLayout_3.addWidget(self.open)
        self.verticalLayout_2.addLayout(self.horizontalLayout_3)
        self.label_2 = QtWidgets.QLabel(self.tab_2)
        self.label_2.setMinimumSize(QtCore.QSize(0, 25))
        self.label_2.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft)
        self.label_2.setObjectName("label_2")
        self.verticalLayout_2.addWidget(self.label_2)
        self.threshold = QtWidgets.QLineEdit(self.tab_2)
        self.threshold.setObjectName("threshold")
        self.verticalLayout_2.addWidget(self.threshold)
        self.label_3 = QtWidgets.QLabel(self.tab_2)
        self.label_3.setMinimumSize(QtCore.QSize(0, 25))
        self.label_3.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft)
        self.label_3.setObjectName("label_3")
        self.verticalLayout_2.addWidget(self.label_3)
        self.green = QtWidgets.QLineEdit(self.tab_2)
        self.green.setObjectName("green")
        self.verticalLayout_2.addWidget(self.green)
        self.label_5 = QtWidgets.QLabel(self.tab_2)
        self.label_5.setMinimumSize(QtCore.QSize(0, 25))
        self.label_5.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft)
        self.label_5.setObjectName("label_5")
        self.verticalLayout_2.addWidget(self.label_5)
        self.width = QtWidgets.QLineEdit(self.tab_2)
        self.width.setObjectName("width")
        self.verticalLayout_2.addWidget(self.width)
        self.label_4 = QtWidgets.QLabel(self.tab_2)
        self.label_4.setMinimumSize(QtCore.QSize(0, 25))
        self.label_4.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft)
        self.label_4.setObjectName("label_4")
        self.verticalLayout_2.addWidget(self.label_4)
        self.height = QtWidgets.QLineEdit(self.tab_2)
        self.height.setObjectName("height")
        self.verticalLayout_2.addWidget(self.height)
        spacerItem3 = QtWidgets.QSpacerItem(20, 103, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_2.addItem(spacerItem3)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem4)
        self.save = QtWidgets.QPushButton(self.tab_2)
        self.save.setObjectName("save")
        self.save.clicked.connect(self.saveSeting)
        self.horizontalLayout_2.addWidget(self.save)
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem5)
        self.verticalLayout_2.addLayout(self.horizontalLayout_2)
        self.tabWidget.addTab(self.tab_2, "")
        self.verticalLayout_3.addWidget(self.tabWidget)

        self.retranslateUi(Dialog)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.label_6.setText(_translate("Dialog", "Vui lòng điền url vào ô bên dưới"))
        self.label_7.setText(_translate("Dialog", "URL"))
        self.sta.setText(_translate("Dialog", "Bắt Đầu Nhận Diện"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("Dialog", "Nhận Diện"))
        self.label.setText(_translate("Dialog", "MODEL"))
        self.open.setText(_translate("Dialog", "Open"))
        self.label_2.setText(_translate("Dialog", "CONFIDENCE_THRESHOLD"))
        self.label_3.setText(_translate("Dialog", "GREEN"))
        self.label_5.setText(_translate("Dialog", "WIDTH"))
        self.label_4.setText(_translate("Dialog", "HEIGHT"))
        self.save.setText(_translate("Dialog", "Lưu"))
        self.path_to_file = '../seting.txt'
        path = Path(self.path_to_file)
        if path.is_file():
            f = open(self.path_to_file)
            date = json.loads(f.read())
            self.model.setText(date["model"])
            self.threshold.setText(str(date["threshold"]))
            self.green.setText(", ".join([str(x) for x in date["green"]]))
            self.width.setText(str(date["width"]))
            self.height.setText(str(date["height"]))
        else:
            self.model.setText("traffic_sign_detection_model_v2.pt")
            self.threshold.setText("0.3")
            self.green.setText("0, 255, 0")
            self.width.setText("650")
            self.height.setText("470")
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("Dialog", "Cài Đặt"))


    def getfile(self):
        fileName, _ = QFileDialog.getOpenFileName(self, 'Open file',
                                            'c:\\', "model (*.pt);;All Files (*)")
        if fileName:
            self.model.setText(fileName)
            print(fileName)

    def getValue(self):
        return {
            'model': self.model.text(),
            'threshold': float(self.threshold.text()),
            'green': list(map(lambda x: int(x), self.green.text().split(","))),
            'width': int(self.width.text()),
            'height': int(self.height.text())
        }

    def saveSeting(self):
        f = open(self.path_to_file, "w")
        f.write(json.dumps(self.getValue()))
        f.close()

    def detect(self):
        current_directory = os.getcwd().replace("\\", "//") +"//voice//"
        vals = self.getValue()
        xam = {
            '102': 'Cam_di_nguoc_chieu',
            '106b': 'Cam_xe_tai',
            '123a': 'Cam_re_trai',
            '123b': 'Cam_re_phai',
            '127': 'Toc_do_toi_da_cho_phep',
            '128': 'Cam_su_dung_coi',
            '130': 'Cam_dung_va_do_xe',
            '131a': 'Cam_do_xe',
            '207b': 'Giao_nhau_voi_duong_khong_uu_tien',
            '225': 'Canh_bao_nguy_hiem_co_Tre_em',
            '245a': 'Di_cham',
            '407a': 'Duong_mot_chieu',
        }
        model = YOLO(vals['model'])
        # cap = cv2.VideoCapture('source1.mp4')
        # youtube_url = 'https://www.youtube.com/watch?v=f8n-1Hwk6x8&t=27s'
        youtube_url = self.url.text()
        cap = cap_from_youtube(youtube_url)
        # cap.set(3, 120)
        # cap.set(4, 120)
        # define some constants

        CONFIDENCE_THRESHOLD = vals['threshold']
        GREEN = vals['green']

        width = vals['width']
        height = vals['height']
        dim = (width, height)
        # cap = cv2.VideoCapture(0)

        d = []
        while True:
            _, img = cap.read()
            img = cv2.resize(img, dim, interpolation=cv2.INTER_AREA)

            # BGR to RGB conversion is performed under the hood
            # see: https://github.com/ultralytics/ultralytics/issues/2575
            results = model.predict(img)

            for r in results:
                annotator = Annotator(img)
                boxes = r.boxes
                a = []
                for box in boxes:
                    b = box.xyxy[0]  # get box coordinates in (top, left, bottom, right) format
                    c = box.cls
                    annotator.box_label(b, model.names[int(c)])
                    a.append(model.names[int(c)])
            a = list(set(a))
            for x in a:
                if len(d) > 4 and (x not in d[0]+d[1]+d[2]+d[3]):
                    print("sid:", x)

                    playsound(current_directory + xam[x] + ".mp3")

            d.insert(0, a)
            img = annotator.result()
            cv2.imshow('YOLO V8 Detection', img)
            if cv2.waitKey(1) & 0xFF == ord(' '):
                break

        cap.release()
        cv2.destroyAllWindows()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec_())
